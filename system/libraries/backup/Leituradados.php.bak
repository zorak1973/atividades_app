<?php
if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Leituradados{
	
	public $destino;
	public $ponteiro;
	public $linhas;
	public $origem;
	public $file;
	public $caminho;
	public $fileName;
	public $flu;
	public $plu;
	public $inicio;
	public $fim;
	public $estacao;
	public $dataLimite;
	public $primeiroDia;
	public $arquivoONS;
	public $nomeArquivoONSLocal;
	public $diaAuxiliar;
	
	
	
	public function __construct(){
		
		
	}
	
	
	
	public function obterArquivo($arquivo,$titulo){
		
		$this->estacao = $titulo;
		$this->origem = (string) $arquivo; 
		$dia = date("d-m-Y_His");
		$this->destino = $titulo.'_arquivo.txt'; 
		try{
			
			copy($this->origem, $this->destino); 
			if (!file_exists($this->destino)) {
			    			    
			 	throw new Exception('Arquivo inexistente');
			    
			} 
			
		}catch(Exception $e){
			
			echo $e->getMessage();
			
		}
	}
	
	
	public function contarLinhas(){
				
		$this->file = file($this->destino);
		$this->linhas = count($this->file);
						
	}
	
	
	public function obterPonteiro(){
		
		$this->ponteiro = fopen($this->destino, 'r');
				
	}
	
	
	
	
	public function lerArquivo(){
		
		$linhas = 0;
		$linhas2 = 0;
		$linhainicio = 0;
		$dataTotal = "";
		$colunas = "";
		$aux = 0;
		$arquivoExportacao = fopen($this->estacao."_file.txt", "w");
		$diretorio = getcwd();
		$caminho = $diretorio."/".$this->estacao."_file.txt";
		$this->caminho = $caminho;
		$fileName = $this->estacao."_file.txt";
		$this->fileName = $fileName;
		
		$diaAux = $this->primeiroDia;
		//LÊ O ARQUIVO ATÉ CHEGAR AO FIM 
		while (!feof($this->ponteiro)) {
		  
		//LÊ UMA LINHA DO ARQUIVO
			$linhaAtual = fgets($this->ponteiro, 4096);
			if($linhas < 3){
				if($linhas==2){
					switch($this->estacao){
						case 'lucena':
						case 'tocantinia':
							$colunas = "data/hora	----  chuva     nivel\r\n";
							break;
						case 'jusante':
							$colunas = "data/hora	----   	nivel   -----    vazao\r\n";	
							break;
						case 'jacinto':
							$colunas = "data/hora 	----   	chuva 	nivel     ------	vazao\r\n";
							break;
						case 'barramento':
							$colunas = "data/hora	chuva     -------       nivel\r\n";
							break;
						case 'ipueiras':
						case 'areias':
							$colunas = "data/hora 	chuva   -------  	nivel    -----     -----\r\n";
							break;
						case 'geronimo':
							$colunas = "data/hora 	chuva   -------  	nivel     -----	vazao\r\n";
							break;
						case 'jurupary':
							$colunas = "data/hora 	--------	chuva     nivel	-----	vazao\r\n";
							break;
						case 'mangues':
							$colunas = "data/hora 	chuva  -------  	nivel   -----\r\n";
							break;
					}
					
					fwrite($arquivoExportacao, $colunas);
				}else{
					fwrite($arquivoExportacao, $linhaAtual);
				}
			}
			
			if($linhas >= 3){
				$dia = substr($linhaAtual, 0, 14);
				$diaIncompleto = substr($linhaAtual, 0, 14);
				
								
				if((strtotime($dia) >= strtotime($this->inicio)) && (strtotime($dia) <= strtotime($this->fim)))
				{
					if($this->estacao =='barramento'){
						$chuva = substr($linhaAtual, 18, 5);
						$outro = substr($linhaAtual, 24, 5);
						$nivel = substr($linhaAtual, 30, 7);
						//$nivel = floatval($nivel);
						$nivel = number_format($nivel, 2, ".","");
						$linhaBarramento = $dia." ".$chuva." "." ".$outro." ".$nivel."\r\n";
						fwrite($arquivoExportacao, $linhaBarramento);
					}else{
						fwrite($arquivoExportacao, $linhaAtual);
					}
					
					
						
				}
			}
			$linhas++;
		}//FECHA WHILE
		
	}
	
	
	
	
	
	
	
	public function Download(){
	
		header("Content-Type: application/force-download");
		header("Content-type: application/octet-stream;");
		header("Content-Length: " . filesize( $this->caminho ) );
		header("Content-disposition: attachment; filename=" . $this->fileName );
		header("Pragma: no-cache");
		header("Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0");
		header("Expires: 0");
		readfile( $this->caminho );
		flush();
		//FECHA O PONTEIRO DO ARQUIVO
		fclose($this->ponteiro);
	
	
	}
	
	
		public function primeiraLinha(){
		
		$ponteiroAux = fopen($this->destino, 'r');
		for($i=0;$i<4;$i++){
			$conteudo = fgets($ponteiroAux,1024);
			if($i==3){
				$this->diaAuxiliar = substr($conteudo, 0, 14);
				
				if(strtotime($this->dataLimite)>=strtotime($this->diaAuxiliar))
				{
					$this->primeiroDia = $this->dataLimite;
				}else{
					$this->primeiroDia = date('m/d/y H:i', strtotime($this->diaAuxiliar,0,8));
				}
			}
		}
		
		
	}
	
	public function totalDias(){
		$ponteiroAux = fopen($this->destino, 'r');
		$linhas = 0;
		$linha1 = '';
		$linha2 = '';
		while (!feof($ponteiroAux)) {
			$conteudo = fgets($ponteiroAux,1024);
			if($linhas==3){
				$linha1= substr($conteudo, 0, 8);
			}
			if($linhas == $this->linhas){
				$linha2 = substr($conteudo, 0, 8);
			}
			$linhas++;
		}
		$data1 = date_create($linha1);
		$data2 = date_create($linha2);
		$dif = date_diff($data1, $data2);
		return $dif->days;			
		
	
	}
	
}
	
	
	
	
	
	
	
?>